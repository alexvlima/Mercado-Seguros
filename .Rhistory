train_rf <- train(train_x, train_y,
method = "rf",
tuneGrid = data.frame(mtry = c(3, 5, 7, 9)))
rf_preds
train_rf
imp(rf)
imp(train_rf)
library(randomForest)
library(caret)
imp(train_rf)
importance(train_rf)
importance(train_rf$bestTune)
importance(train_rf)
train_rf
importance(train_rf$finalModel)
plot(imp)
imp <- importance(train_rf$finalModel)
plot(imp)
imp <- varImp(train_rf$finalModel)
plot(imp)
imp
imp <- varImp(train_rf)
imp
rf_preds <- predict(train_rf, test_x)
mean(knn_preds == test_y)
train_rf <- train(train_x, train_y,
method = "rf",
tuneGrid = data.frame(mtry = c(3, 5, 7, 9)))
confusionMatrix(knn_preds == test_y)
rf_preds <- predict(train_rf, test_x)
confusionMatrix(knn_preds == test_y)
confusionMatrix(knn_preds, test_y)
imp <- varImp(train_rf)
imp
imp <- varImp(train_rf)
imp
imp <- varImp(train_rf$finalModel)
imp
imp <- importance(train_rf$finalModel)
imp
varImp(train_rf)
# set.seed(9) # simulate R 3.5
set.seed(9, sample.kind = "Rounding")
tuning <- data.frame(mtry = c(3, 5, 7, 9))    # can expand to seq(3, 21, 2), same
train_rf <- train(train_x, train_y,
method = "rf",
tuneGrid = tuning,
importance = TRUE)
train_rf$bestTune
rf_preds <- predict(train_rf, test_x)
mean(rf_preds == test_y)
varImp(train_rf)
plot(train_y, train_x["mean values"])
glimpse(train_x)
plot(train_y, train_x["mean values",])
plot(train_y, train_x[,"mean values"])
plot(train_y, train_x["mean_values"])
varImp(train_rf)
train_rf %>%
varImp() %>%
top_n(10)
varImp(train_rf) %>%
top_n(10)
imp <- varImp(train_rf)
imp %>%
top_n(10)
varImp(train_rf)
mean(knn_preds == test_y)
mean(loess_preds == test_y)
mean(glm_preds == test_y)
library(caret)
train_glm <- train(train_x, train_y,
method = "glm", family = "binomial")
glm_preds <- predict(train_glm, test_x)
mean(glm_preds == test_y)
mean(lda_preds == test_y)
mean(loess_preds == test_y)
mean(rf_preds == test_y)
train_glm <- train(train_x, train_y,
method = "glm")
glm_preds <- predict(train_glm, test_x)
mean(glm_preds == test_y)
kmeans_preds
df <- data.frame(kmeans_preds, glm_preds, lda_preds, qda_preds, loess_preds, knn_preds, rf_preds)
glimpse(df)
votes <- rowMeans(pred == "M")
y_hat <- ifelse(votes > 0.5, "M", "B")
rowMeans(df)
df <- data.frame(kmeans_preds == "M", glm_preds == "M", lda_preds == "M", qda_preds == "M", loess_preds, knn_preds, rf_preds)
glimpse(df)
df <- data.frame(kmeans_preds == "M", glm_preds == "M", lda_preds == "M", qda_preds == "M",
loess_preds == "M", knn_preds == "M", rf_preds == "M")
votes <- rowMeans(df)
y_hat <- ifelse(votes > 0.5, "M", "B")
mean(y_hat == test_y)
112000*0.3
112000*0.3*0.6
112000*0.3*0.7
112000*0.3*0.7
33600*0.3/0.7
0.1/6.25
66667*12*0.7
15/12
14400/260000
df <- data.frame(funcionario = c(1,2,3,4,5,6,7,8,9,10),
empresas = c(2323,4324, 3216, 2018, 1802, 1438, 23207, 435, 345,23))
rm(list = ls())
df <-
data.frame(
funcionario = c(1,2,3,4,5,6,7,8,9,10),
empresas = c(2323,4324, 3216, 2018, 1802, 1438, 23207, 435, 345,23))
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_histogram() +
geom_vline(xintercept = 7, color = red)
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_histogram() +
geom_vline(xintercept = 7, color = "red")
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_bar() +
geom_vline(xintercept = 7, color = "red")
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_bar()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7, color = "red")
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red")
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red") +
xlab("Qtde de Funcionários") +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed") +
xlab("Qtde de Funcionários") +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 3) +
xlab("Qtde de Funcionários") +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 2) +
xlab("Qtde de Funcionários") +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 1) +
xlab("Qtde de Funcionários") +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 1) +
xlab("Qtde de Funcionários") +
scale_x_discrete() +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 1) +
xlab("Qtde de Funcionários") +
scale_x_discrete(limits=seq("1","10","1")) +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 1) +
xlab("Qtde de Funcionários") +
scale_x_discrete(limits=seq(1,10,1)) +
ylab("Qtde de Empresas") +
theme_minimal()
df %>%
ggplot(aes(x = funcionario, y = empresas)) +
geom_col() +
geom_vline(xintercept = 7.5, color = "red", linetype = "dashed", size = 1) +
xlab("Qtde de Funcionários") +
scale_x_discrete(limits=factor(seq(1,10,1))) +
ylab("Qtde de Empresas") +
theme_minimal()
library(BatchGetSymbols)
library(BatchGetSymbols)
install.packages("BatchGetSymbols")
rm(list = ls())
library(BatchGetSymbols)
acao<-c('ISUF20') #aqui é o nome da ação
bg<-'2014-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
bench<-'^BMF'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
library(BatchGetSymbols)
rm(list = ls())
acao<-c('CTM') #aqui é o nome da ação
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
bg<-'2014-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data)
acao<-c('SFI') #aqui é o nome da ação
bg<-'2014-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data)
tail(data)
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data$)
tail(data)
acao<-c('SFIU20') #aqui é o nome da ação
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data)
acao<-c('OZ1') #aqui é o nome da ação
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
acao<-'OZ1' #aqui é o nome da ação
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data)
acao<-'OZ1' #aqui é o nome da ação
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
data
tail(data)
acao<-'SOJU' #aqui é o nome da ação
acao<-'SOJU2020' #aqui é o nome da ação
bg<-'2020-01-01' #o período inicial, geralmente após os anos 2000
lst<-Sys.Date()  #aqui coloquei a data de hoje, mas poderia ser qualquer outra
bench<-'^BVSP'
data<-BatchGetSymbols(tickers = acao,bench.ticker = bench,
first.date = bg,last.date = lst) #comando que irá baixar os dados no Yahoo Finance
library(quandl)
install.packages("quandl")
install.packages("Quandl")
Corn <- Quandl("CHRIS/CME_C1")
library(Quandl)
Corn <- Quandl("CHRIS/CME_C1")
Corn
library(Quandl)
Corn <- Quandl("CHRIS/CME_C1")
Corn
Rcade::games$Pacman
Rcade::games$Mariohtml5
library(deflateBR)
install.packages(c("ARDL", "aTSA", "deflateBR", "priceR", "qpcR", "readxl", "tidyverse", "urca", "x12", "xts", "zoo"))
library(readxl)
library(tidyverse)
install.packages("rlang")
library(tidyverse)
install.packages("rlang")
library(tidyverse)
install.packages("tidyselect")
library(tidyverse)
library(ARDL)
library(deflateBR)
library(priceR)
library(zoo)
library(xts)
library(x12)
library(aTSA)
library(urca)
library(qpcR)
install.packages("rgl")
library(qpcR)
install.packages("rgl")
library(rgl)
library(qpcR)
# getwd()
setwd("/Users/alexvlima/Library/Mobile Documents/com~apple~CloudDocs/ABR_Telecom_ESAQ/Grupos/Grupo2/Estabilizacao_p/")
library(tidyverse)
# LENDO OS ARQUIVOS #
temp <- paste0("./Dados/Rawdata/", list.files(path = "./Dados/Rawdata/", pattern = "*.*csv"))
base_resultados <- lapply(temp, read_csv2, locale(encoding = "UTF-8"), col_names = TRUE, col_types = NULL)
ls
rm(temp)
glimpse(base_resultados)
base_resultados <- bind_rows(base_resultados)
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- bind_rows(base_resultados)
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- bind_rows(base_resultados)
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES,
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- lapply(base_resultados, function(x) select(x,
PRESTADORA,
CODIGO_IBGE,
TECNOLOGIA,
VELOCIDADE_UPLOAD,
VELOCIDADE_DOWNLOAD,
LATENCIA_MEDIA,
LATENCIA_MINIMA,
LATENCIA_MAXIMA,
VARIACAO_DA_LATENCIA_JITTER,
PERDA_DE_PACOTES,
CM_IND4_UL,
CM_IND4_DL,
CM_IND5,
CM_IND6,
CM_IND7))
base_resultados <- bind_rows(base_resultados)
glimpse_resultados
glimpse(resultados)
base_resultados <-
base_resultados %>%
mutate(VARIACAO_DA_LATENCIA_JITTER = as.numeric(VARIACAO_DA_LATENCIA_JITTER))
base_resultados <-
base_resultados %>%
map(~mutate(.,as.numeric(.$VARIACAO_DA_LATENCIA_JITTER)))
base_resultados <- bind_rows(base_resultados)
glimpse(base_resultados)
base_resultados <-
base_resultados %>%
map(~mutate(.,.$VARIACAO_DA_LATENCIA_JITTER = as.numeric(.$VARIACAO_DA_LATENCIA_JITTER)))
base_resultados <-
base_resultados %>%
map(~mutate(.,VARIACAO_DA_LATENCIA_JITTER = as.numeric(.$VARIACAO_DA_LATENCIA_JITTER)))
glimpse(base_resultados)
base_resultados <- bind_rows(base_resultados)
base_resultados <-
base_resultados %>%
map(~mutate(.,
VARIACAO_DA_LATENCIA_JITTER = as.numeric(.$VARIACAO_DA_LATENCIA_JITTER),
VELOCIDADE_UPLOAD = as.numeric(.$VELOCIDADE_UOLOAD),
VELOCIDADE_DOWNLOAD = as.numeric(.$VELOCIDADE_DOWNLOAD),
PERDA_DE_PACOTES = as.numeric(.$PERDA_DE_PACOTES)))
base_resultados <-
base_resultados %>%
map(~mutate(.,
VARIACAO_DA_LATENCIA_JITTER = as.numeric(.$VARIACAO_DA_LATENCIA_JITTER),
VELOCIDADE_UPLOAD = as.numeric(.$VELOCIDADE_UPLOAD),
VELOCIDADE_DOWNLOAD = as.numeric(.$VELOCIDADE_DOWNLOAD),
PERDA_DE_PACOTES = as.numeric(.$PERDA_DE_PACOTES)))
base_resultados <- bind_rows(base_resultados)
glimpse(base_resultados)
sum(is.na(base_resultados$CODIGO_IBGE))
sum(is.na(base_resultados$CODIGO_IBGE)==TRUE)
base_resultados
base_resultados <-
base_resultados %>%
filter(is.na(CODIGO_IBGE) == FALSE)
unique(base_resultados$CM_IND4_UL)
unique(base_resultados$CM_IND7)
library(tidyverse)
base_seguros <- read.csv2("~/Documents/GitHub/Mercado-Seguros/Dataset/base_seguros.csv",
fileEncoding = "latin1")
rm(list = ls())
library(tidyverse)
base_seguros <- read.csv2("~/Documents/GitHub/Mercado-Seguros/Dataset/base_seguros.csv",
fileEncoding = "latin1")
getwd()
setwd("/Users/alexvlima/Documents/GitHub/Mercado-Seguros/")
glimpse(base_seguros)
base_seguros <- read.csv2("~/Documents/GitHub/Mercado-Seguros/Dataset/base_seguros.csv",
fileEncoding = "latin1")
base_seguros <- read.csv2("Dataset/.base_seguros.csv.icloud",
fileEncoding = "latin1")
base_seguros <- read.csv2("Dataset/base_seguros.csv",
fileEncoding = "latin1")
glimpse(base_seguros)
base_seguros %>%
select(nogrupo) %>%
distinct()
base_seguros %>%
filter(str_detect(noramo, pattern = "Viagem")) %>%
select(coramo,noramo, gr_ramo) %>%
distinct()
base_seguros %>%
filter(coramo == 1369) %>%
group_by(ano) %>%
summarise(sinistro = sum(sinistro_ocorrido, na.rm = T),
premio_ganho = sum(premio_ganho, na.rm = T),
comissao = sum(desp_com, na.rm = T),
premio_emitido = sum(premio_emitido2, na.rm = T)) %>%
mutate(sinistralidade = sinistro / premio_ganho,
comissao = comissao / premio_emitido) %>%
ggplot(aes(x = ano, y = sinistralidade)) +
geom_col(fill = "#002364") +
geom_text(aes(label = round(sinistralidade*100,0)), vjust=-0.3, size = 3) +
scale_x_continuous("", breaks = c(2015:2021)) +
scale_y_continuous("", labels = scales::percent) +
ggtitle("Sinistralidade - Seguro Viagem Individual") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
43/200
