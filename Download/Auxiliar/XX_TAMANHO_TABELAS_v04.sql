
	USE WORK_ALISSON
	GO
	:SETVAR SERVER SQL33\ATUARIAL2
	:SETVAR DATABASE SUSEP_SES

	DECLARE @TEXTO VARCHAR(MAX) = NULL
	--DECLARE @TEXTO VARCHAR(MAX) = 'SES_%'

	;WITH CTE_TABELAS AS (
		SELECT 
		 SCH_NAME	=	S.NAME
		,OBJ_ID		=	I.OBJECT_ID
		,TAB_NAME	=	T.NAME
		,SIZ_GBS	=	CAST(CAST(((SUM(A.TOTAL_PAGES) * 8) / POWER(1024.0,2)) AS DECIMAL(20, 3)) AS FLOAT)
		FROM [$(SERVER)].[$(DATABASE)].SYS.TABLES T
		INNER JOIN [$(SERVER)].[$(DATABASE)].SYS.INDEXES I			 ON T.OBJECT_ID		= I.OBJECT_ID
		INNER JOIN [$(SERVER)].[$(DATABASE)].SYS.PARTITIONS P		 ON I.OBJECT_ID		= P.OBJECT_ID	AND I.INDEX_ID		= P.INDEX_ID
		INNER JOIN [$(SERVER)].[$(DATABASE)].SYS.ALLOCATION_UNITS A	 ON P.PARTITION_ID	= A.CONTAINER_ID
		LEFT OUTER JOIN [$(SERVER)].[$(DATABASE)].SYS.SCHEMAS S		 ON T.SCHEMA_ID		= S.SCHEMA_ID
		WHERE 1=1
		AND IIF(@TEXTO IS NOT NULL,T.NAME,'¬') LIKE IIF(@TEXTO IS NOT NULL,@TEXTO,'¬')
		GROUP BY 
		 S.NAME
		,I.OBJECT_ID
		,T.NAME
	)

	SELECT *
	,SIZ_GBS_ACU	=	CAST(SUM(SIZ_GBS) OVER(ORDER BY SIZ_GBS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS DECIMAL(20,3))
	,SIZ_GBS_TOT	=	CAST(SUM(SIZ_GBS) OVER(ORDER BY SIZ_GBS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS DECIMAL(20,3))
	,SIZ_PCT		=	RIGHT(CAST(100*
						SIZ_GBS
					/	SUM(SIZ_GBS) OVER(ORDER BY SIZ_GBS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
						AS DECIMAL(20,2)),6)+'%'
	,SIZ_PCT_ACM	=	
						RIGHT(CAST(100*
						SUM(SIZ_GBS) OVER(ORDER BY SIZ_GBS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 
					/	SUM(SIZ_GBS) OVER(ORDER BY SIZ_GBS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
						AS DECIMAL(20,2)),6)+'%'
	FROM CTE_TABELAS
	ORDER BY SIZ_GBS DESC
	--ORDER BY OBJ_ID
	--ORDER BY 3

	--'Ses_part_acion.csv'